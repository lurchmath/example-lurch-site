/*
 * This file styles the contents of the TinyMCE editor iframe.
 * Styling for the main app page (which contains the editor and other things as
 * well) is in main-app-styles.css.
 */

@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,400;0,700;1,400;1,700&family=Roboto:ital,wght@0,400;0,700;1,400;1,700&display=swap');

/* set css variables */
:root {
    /* for \text mode in Math Live */
    --_text-font-family: 'Roboto', 'Arial', Helvetica, sans-serif;
    /* hovered atom background color */
    --hovercolor: #BBD6FB;  /* rgb(187,214,251); #B9D9F2*/
    /* selected atom backround color */
    --selectedcolor: #A1C6F5;
    /* borders and titles of shells color */
    --bordercolor: #b4d7ff;
    /* green checkmark color */
    --checkcolor: #4CAF50;  
    /* question mark feedback icon color */
    --questionmarkcolor: #d8b400;  
    /* rule shell background color */
    --rulecolor: #e7f3fd;  
    /* theorem shell background color */
    --theoremcolor: #f5f5f5;  
    /* recall shell background color */
    --recallcolor: #f7f7f7;
}

/* set the base font */
body, p, h1, h2, h3, h4, h5, h6, div, ul, ol, li {
    font-family: 'Roboto', 'Arial', Helvetica, sans-serif;
}

/* Set the default font size.  This mainly affects word wrap. */
p {
    font-size: 12pt;
}
/* Expression atoms */
.putdown-notation {
    font-size : 16pt;
    font-family : 'Anonymous Pro', 'PT Mono', 'Oxygen monospace', monospace;
}
.smackdown-notation {
    font-size : 16pt;
    font-family : 'Anonymous Pro', 'PT Mono', 'Oxygen monospace', monospace;
}
/* for some reason the math symbols are too small compared to the surrounding text 
   so increase them here. */
.ML__latex {
    font-size : 1.2rem;
}
/* But then the plain text in a math field is too big, so shrink it back here. */
.ML__latex .ML__text {
    font-size : 1rem;
}

/* We not only want to shade the background of a selected inline atom, but if
the MathLive rendering spills outside the atom we want to shade that as well */
.atom-is-selected,
.atom-is-selected .lurch-atom,
.atom-is-selected .ML__latex {
    background-color: var(--hovercolor);
    padding: 0;
}
/* Make the border color match the background shading */
.mce-content-body [contentEditable=false][data-mce-selected] {
    cursor: not-allowed;
    outline: 3px solid var(--selectedcolor)
}

/* Feedback icons for inline atoms */
span.feedback-marker-valid::after {
    content: '✓';
    font-family: 'Lucida Grande';
    color: var(--checkcolor);
    font-weight: bold;
}
span.feedback-marker-indeterminate::after {
    content: '?';
    font-family: 'Lucida Grande';
    color: var(--questionmarkcolor);
    font-weight: bold;
}
span.feedback-marker-invalid::after {
    content: '✗';
    font-family: 'Lucida Grande';
    color: red;
    font-weight: bold;
}
span.feedback-marker-error::after {
    content: '!';
    font-family: 'Lucida Grande';
    color: red;
    font-weight: bold;
}

/* Editing View */
/* Shows a border around atoms which highlights when hovered. */
body.shell-style-boxed {

    /* paragraph margins inside boxes */
    p {
        margin: 0.2rem 0;
    }

    /* Atoms get borders */
    .lurch-atom {
        /* border: 1px solid #bbb; */
        border: 1px solid var(--bordercolor);
        border-radius: 6px;
        padding: 1px 2px;
    }

    /* But not expository ones */
    .lurch-atom[data-metadata_type='"expositorymath"'] {
        border: none;
        padding: 1px 2px;
    }

    /* Override padding and margins for  atoms that are shells */
    div.lurch-atom[data-shell_title] {
        position: relative;
        padding: 0.8rem 1rem 0.6rem;
        margin: 1.5rem 0 1rem;
    }

    /* prevent inline atoms on consecutive lines from overlapping */
    span.lurch-atom {
        display: inline-block;
        margin-top: 0.2rem;
    }

    /* Make atom borders thick when hovered */
    :not(:not(.lurch-atom:hover),.lurch-atom:has(.lurch-atom:hover)) {
        outline: 3px solid var(--bordercolor)
    }

    /* Reduce the padding and margins for subproofs and premises */
    div.lurch-atom[data-shell_title=""] {
        padding: 0.5em 0.75em;
        margin: 1ex 0;
    }
    
    /* Add a shell title */
    div.lurch-atom[data-shell_title]::before {
        content: attr(data-shell_title);
        color: #b4d7ff;
        background-color: white;
        font-weight: bold;
        position: absolute;
        top: -9pt;
        left: 6pt;
        padding: 0 6pt;
    }

    /* Add a shell title for premises for now (possibly temporary) */
    div.lurch-atom[data-metadata_type='"premise"']::before {
        content: 'Premise:';
    }

    /* Validation icons for boxed shells */
    div.lurch-atom[data-shell_title][data-validation_result="valid"]::after {
        content: '✓';
        color: var(--checkcolor);
        background-color: transparent;
        font-family: 'Lucida Grande';
        font-weight: bold;
        position: absolute;
        bottom: -7pt;
        right: 6pt;
        padding: 0 6pt;
    }
    div.lurch-atom[data-shell_title][data-validation_result="indeterminate"]::after {
        content: '?';
        color: var(--questionmarkcolor);
        background-color: transparent;
        font-family: 'Lucida Grande';
        font-weight: bold;
        position: absolute;
        bottom: -7pt;
        right: 6pt;
        padding: 0 6pt;
    }
    div.lurch-atom[data-shell_title][data-validation_result="invalid"]::after {
        content: '✗';
        color: red;
        background-color: transparent;
        font-family: 'Lucida Grande';
        font-weight: bold;
        position: absolute;
        bottom: -7pt;
        right: 6pt;
        padding: 0 6pt;
    }

    /* TinyMCE code formatting is currently useful for things like referring to menus */
    code {
        font-size: 0.9em;
        padding: 0.2em 0.4em;
        border-radius: 4px;
        font-family: 'Anonymous Pro', 'PT Mono', 'Oxygen monospace', monospace;
    }

    /* reduce left padding from nested numbered lists inside atoms */
    div.lurch-atom ol {
        padding: 0 0 0 20px;
    }

} /* END of boxed mode */

/* Minimal view shows no borders and uses whitespace to visually surround its
   content. */
body.shell-style-minimal {

    /* minimal view of shells */
    div.lurch-atom[data-shell_title] {
        position: relative;
        border: none;
        /* No right padding so shell checkmarks align */
        padding: 0.5rem 0 0.5rem 1rem;
        margin: 0.5rem 0;
        line-height: 1.5; 
    }

    /* Minimal view of subproofs (shells with no title) is to be indented on the
      left according to it's nesting level. */
    div.lurch-atom[data-shell_title=""] {
        border: none;
        margin: 0;
        padding: 0 0 0 1.5rem;
    }
    div.lurch-atom[data-shell_title=""]:not(.lurch-atom[data-shell_title="Proof:"] *) {
      padding: 0;
    }

    /* themed background color-coding of shells */
    div.lurch-atom[data-metadata_type='"rule"']:not(.atom-is-selected,:hover) {
        background-color: var(--rulecolor);
    }
    div.lurch-atom[data-metadata_type='"theorem"']:not(.atom-is-selected,:hover) {
        background-color: var(--theoremcolor);
    }
    div.lurch-atom[data-metadata_type='"recall"']:not(.atom-is-selected,:hover) {
        background-color: var(--recallcolor);
    }

    div.lurch-atom[data-shell_title][data-validation_result="valid"]::after {
        content: '✓';
        color: var(--checkcolor);
        background-color: transparent;
        font-family: 'Lucida Grande';
        font-weight: bold;
        position: absolute;
        bottom: -7pt;
        right: 0pt;
        padding: 0 6pt;
    }
    div.lurch-atom[data-shell_title][data-validation_result="indeterminate"]::after {
        content: '?';
        color: var(--questionmarkcolor);
        background-color: transparent;
        font-family: 'Lucida Grande';
        font-weight: bold;
        position: absolute;
        bottom: -7pt;
        right: 0pt;
        padding: 0 6pt;
    }
    div.lurch-atom[data-shell_title][data-validation_result="invalid"]::after {
        content: '✗';
        color: red;
        background-color: transparent;
        font-family: 'Lucida Grande';
        font-weight: bold;
        position: absolute;
        bottom: -7pt;
        right: 0pt;
        padding: 0 6pt;
    }
    
    /* Highlighting of nested shells on hover */
    :not(:not(.lurch-atom:hover),.lurch-atom:has(.lurch-atom:hover)
        ) {
        background-color: var(--hovercolor)
    }
    :not(:not(.lurch-atom:hover),.lurch-atom:has(.lurch-atom:hover)) {
      .atom-is-selected, 
      .atom-is-selected .lurch-atom,
      .atom-is-selected .ML__latex  {
        background-color: var(--selectedcolor)
      }
      /* .ML__latex:not(.atom-is-selected),  */
      [data-metadata_type='"rule"'], 
      [data-metadata_type='"theorem"'],
      [data-metadata_type='"recall"'],
      .ML__latex {
        background-color: var(--hovercolor)
      }
    }
  
    /* Code blocks use the same font, slightly larger, with a standard background
      and less padding. */
    code {
        font-size: 0.95em;
        padding: 0.2em;
        border-radius: 4px;
        /* font-family: 'Roboto Mono', 'Anonymous Pro', 'PT Mono', 'Oxygen monospace', monospace; */
        font-family: 'Anonymous Pro', 'PT Mono', 'Oxygen monospace', monospace;
    }
    
    /* remove left padding and margins from paragraphs inside atoms */
    div.lurch-atom[data-shell_title] p {
        margin: 0;
        padding: 0;
        line-height: 1.15;
    }
    /* remove left padding from nested numbered lists inside atoms */
    div.lurch-atom ol {
        padding: 0 0 0 1rem;
    }
    /* remove left padding from nested numbered lists inside atoms */
    div.lurch-atom ol ol {
        padding: 0;
    }
  
}  /* END of minimal mode */

/* Dependency URL atoms  */
.lurch-dependency {
    border: solid 1px gray;
    padding: 0 1em;  
}
.lurch-dependency table {
    table-layout: fixed;
    width: 100%;  
}
.lurch-dependency .lurch-borderless-table {
    border: none;
}
.lurch-dependency col:first-of-type {
    width: 12%;  
}
.lurch-dependency td {
    vertical-align: baseline;
}
.lurch-dependency tr:nth-of-type(2) td:first-of-type {
    font-size: 11pt;
}

/* Other */

/* Not sure where this is used */
span.URL {
    font-family : 'Anonymous Pro', 'PT Mono', 'Oxygen monospace', monospace;
    font-size: small;
}
/* LC meaning preview dialog pane */
div.LC-meaning-preview {
    height: 10em;
    overflow-y: scroll;
}

/* Make the body of the editor look completely different if we are editing the
   header of a document, so that users do not confuse headers with documents. */
body.header-editor {
    background-color: #ddd;
}

/*
 * The following was an experiment in using background color for expression feedback.
 * It was not perfect, so is commented out.  But I'm keeping it here so that we have
 * the appropriate CSS selectors for reference if we want to improve this later.
 *
span:has(span > .feedback-marker-valid) {
    background-color: #4CAF5080;
}
span:has(span > .feedback-marker-invalid) {
    background-color: #FF000080;
}
span:has(span > .feedback-marker-indeterminate) {
    background-color: #D8B40080;
}
span:has(span > .feedback-marker-error) {
    background-color: #FF000080;
}
 *
 */
