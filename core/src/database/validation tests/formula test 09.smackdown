---
testing:
  type: validation
  subtype: formula
  description: "Testing Pierce."
---

// global constants 
(∧ ∨ ⇒ ⇔ ¬ ∀ ∃ =),{       

  // ND Prop rule library
  :{ :W :V  (∧ W V) }               \label{∧+}
  :{ :(∧ W V) W V }                 \label{∧-}
  :{ :W  (∨ W V) (∨ V W) }          \label{∨+}
  :{ :(∨ W V) :{:W U} :{:V U}  U }  \label{∨-}
  :{ :{:W V}  (⇒ W V) }             \label{⇒+}
  :{ :W :(⇒ W V)  V }               \label{⇒-}
  :{ :{:W V} :{:V W}  (⇔ W V) }     \label{⇔+}
  :{ :(⇔ W V)  {:W V} {:V W} }      \label{⇔-}
  :{ :{:W V (¬ V)}  (¬ W) }         \label{¬+}
  :{ :{:(¬ W) V (¬ V)}  W }         \label{¬-}
  
  // Theorem (Pierce) 
  { (⇒ (⇒ (⇒ P Q) P) P)     \valid }  

  // proof
  { 
    { :(⇒ (⇒ P Q) P)
      { :(¬ P)
        { :P
          Q                 \valid  // motivates ¬-
        }              
        (⇒ P Q)             \valid  // motivates ⇒+
        P                   \valid  // motivates ⇒-
      }
      P                     \valid  // motivates second ¬-                    
    }
    (⇒ (⇒ (⇒ P Q) P) P)     \valid  // motivates second ⇒+
  }
    
}

( instantiation      // :{ :{:(¬ Q) P (¬ P)} Q }
   (formula "¬-")
   ((W Q) (V P))
   (result "valid")
)

( instantiation      // :{ :{:P Q} (⇒ P Q ) }
   (formula "⇒+")
    ((W P) (V Q) )
   (result "valid")
)

( instantiation      // :{ :(⇒ P Q) :(⇒ (⇒ P Q) P) P }
   (formula "⇒-")
    ((W (⇒ P Q)) (V P) )
   (result "valid")
)

( instantiation      // :{ :{(¬ P) P (¬ P)} P }
   (formula "¬-")
    ((W P) (V P) )
   (result "valid")
)

( instantiation      // :{ :(⇒ (⇒ P Q) P) P } (⇒ (⇒ (⇒ P Q) P) P) }
   (formula "⇒+")
    ((W (⇒ (⇒ P Q) P)) (V P) )
   (result "valid")
)
